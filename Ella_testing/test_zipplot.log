
. 
. foreach feature in dgm target method {
  2.         local N 6
  3.         if "`feature'"=="dgm" local N 5
  4.         forvalues n=1/`N' {
  5.                 dicmd use data/setupdata_`feature'`n', clear
  6.                 dicmd siman zipplot, name(zipplot_`feature'`n', replace) bygr(title(Test siman 
> zipplot using data `feature'`n'))
  7.         }
  8. }
use data/setupdata_dgm1, clear
siman zipplot, name(zipplot_dgm1, replace) bygr(title(Test siman zipplot using data dgm1))
siman zipplot will draw 1 graph with 3 panels
use data/setupdata_dgm2, clear
siman zipplot, name(zipplot_dgm2, replace) bygr(title(Test siman zipplot using data dgm2))
siman zipplot will draw 1 graph with 3 panels
use data/setupdata_dgm3, clear
siman zipplot, name(zipplot_dgm3, replace) bygr(title(Test siman zipplot using data dgm3))
siman zipplot will draw 1 graph with 6 panels
use data/setupdata_dgm4, clear
siman zipplot, name(zipplot_dgm4, replace) bygr(title(Test siman zipplot using data dgm4))
siman zipplot will draw 1 graph with 12 panels
use data/setupdata_dgm5, clear
siman zipplot, name(zipplot_dgm5, replace) bygr(title(Test siman zipplot using data dgm5))
siman zipplot will draw 1 graph with 36 panels
Consider reducing the number of panels using 'if' condition or 'by' option
use data/setupdata_target1, clear
siman zipplot, name(zipplot_target1, replace) bygr(title(Test siman zipplot using data target1))
siman zipplot will draw 1 graph with 9 panels
use data/setupdata_target2, clear
siman zipplot, name(zipplot_target2, replace) bygr(title(Test siman zipplot using data target2))
siman zipplot will draw 1 graph with 9 panels
use data/setupdata_target3, clear
siman zipplot, name(zipplot_target3, replace) bygr(title(Test siman zipplot using data target3))
siman zipplot will draw 1 graph with 27 panels
Consider reducing the number of panels using 'if' condition or 'by' option
use data/setupdata_target4, clear
siman zipplot, name(zipplot_target4, replace) bygr(title(Test siman zipplot using data target4))
siman zipplot will draw 1 graph with 27 panels
Consider reducing the number of panels using 'if' condition or 'by' option
use data/setupdata_target5, clear
siman zipplot, name(zipplot_target5, replace) bygr(title(Test siman zipplot using data target5))
siman zipplot will draw 1 graph with 27 panels
Consider reducing the number of panels using 'if' condition or 'by' option
use data/setupdata_target6, clear
siman zipplot, name(zipplot_target6, replace) bygr(title(Test siman zipplot using data target6))
siman zipplot will draw 1 graph with 27 panels
Consider reducing the number of panels using 'if' condition or 'by' option
use data/setupdata_method1, clear
siman zipplot, name(zipplot_method1, replace) bygr(title(Test siman zipplot using data method1))
siman zipplot will draw 1 graph with 6 panels
use data/setupdata_method2, clear
siman zipplot, name(zipplot_method2, replace) bygr(title(Test siman zipplot using data method2))
siman zipplot will draw 1 graph with 6 panels
use data/setupdata_method3, clear
siman zipplot, name(zipplot_method3, replace) bygr(title(Test siman zipplot using data method3))
siman zipplot will draw 1 graph with 18 panels
Consider reducing the number of panels using 'if' condition or 'by' option
use data/setupdata_method4, clear
siman zipplot, name(zipplot_method4, replace) bygr(title(Test siman zipplot using data method4))
siman zipplot will draw 1 graph with 18 panels
Consider reducing the number of panels using 'if' condition or 'by' option
use data/setupdata_method5, clear
siman zipplot, name(zipplot_method5, replace) bygr(title(Test siman zipplot using data method5))
siman zipplot will draw 1 graph with 18 panels
Consider reducing the number of panels using 'if' condition or 'by' option
use data/setupdata_method6, clear
siman zipplot, name(zipplot_method6, replace) bygr(title(Test siman zipplot using data method6))
siman zipplot will draw 1 graph with 18 panels
Consider reducing the number of panels using 'if' condition or 'by' option

. 
. // Compare zips made from se and from ci
. use data/extendedtestdata, clear

. siman setup, rep(re) dgm(beta pmi mech) target(esti) method(meth) estimate(b) se(se) true(true)
Warning: dgm variable mech has been converted from string to numeric. If you require its levels to
  be ordered differently, encode mech as numeric before running -siman setup-.
Warning: dgm variable beta has non-integer values: converting from float to double (0 real changes
  made)
Warning: dgm variable pmiss has non-integer values: converting from float to double (108,000 real
  changes made)

                   SUMMARY OF DATA
_____________________________________________________

Data-generating mechanism (DGM)
  DGM variables (# levels):       beta (3) pmiss (2) mech (2) 
  Total number of DGMs:           12

Targets
  Variable containing targets:    estimand
  Number of targets:              3
  Target values:                  effect; mean0; mean1

Methods
  Variable containing methods:    method
  Number of methods:              3
  Method values:                  CCA; MeanImp; Noadj

Repetition-level output
  Point estimate variable:        b
  SE variable:                    se
  df variable:                    N/A
  Conf. limit variables:          N/A
  p-value variable:               N/A
  True value variable:            true
_____________________________________________________

. siman zip if mech==1 & float(pmiss)==float(0.2) & estimand=="effect", noncov(lcol(red)) cov(lcol(b
> lue)) sca(mcol(red)) truegr(lcol(green)) bygr(row(3)) scheme(s1color) name(g1,replace)
siman zipplot will draw 1 graph with 9 panels

. 
. use data/extendedtestdata, clear

. gen lower=b-invnorm(.975)*se

. gen upper=b+invnorm(.975)*se

. drop se

. siman setup, rep(re) estimate(b) dgm(beta pmi mech) target(esti) method(meth) lci(lower) uci(upper
> ) true(true)
Warning: dgm variable mech has been converted from string to numeric. If you require its levels to
  be ordered differently, encode mech as numeric before running -siman setup-.
Warning: dgm variable beta has non-integer values: converting from float to double (0 real changes
  made)
Warning: dgm variable pmiss has non-integer values: converting from float to double (108,000 real
  changes made)

                   SUMMARY OF DATA
_____________________________________________________

Data-generating mechanism (DGM)
  DGM variables (# levels):       beta (3) pmiss (2) mech (2) 
  Total number of DGMs:           12

Targets
  Variable containing targets:    estimand
  Number of targets:              3
  Target values:                  effect; mean0; mean1

Methods
  Variable containing methods:    method
  Number of methods:              3
  Method values:                  CCA; MeanImp; Noadj

Repetition-level output
  Point estimate variable:        b
  SE variable:                    N/A
  df variable:                    N/A
  Conf. limit variables:          lower upper
  p-value variable:               N/A
  True value variable:            true
_____________________________________________________

. siman zip if mech==1 & float(pmiss)==float(0.2) & estimand=="effect", noncov(lcol(red)) cov(lcol(b
> lue)) sca(mcol(red)) truegr(lcol(green)) bygr(row(3)) scheme(s1color) name(g2,replace)
siman zipplot will draw 1 graph with 9 panels

. 
. di as result "*** SIMAN HAS PASSED ALL THE TESTS IN `filename'.do ***"
*** SIMAN HAS PASSED ALL THE TESTS IN test_zipplot.do ***

. 
. log close
