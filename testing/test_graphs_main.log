
. 
. ********************************
. ********************************
. * DGM defined by 1 variable:
. * numeric
. * numeric with string labels
. * string
. * missing
. 
. * DGM defined by multiple variables with multiple levels:
. * numeric
. * numeric with string labels
. * string
. 
. * TARGET and METHOD:
. * wide or long
. * numeric
. * numeric with string labels
. * string
. * missing
. 
. * method: methlist option for subset of multiple methods
. 
. * TRUE
. * numeric value
. * numeric variable 1 level
. * numeric variable >1 level
. * missing
. ********************************
. ********************************
. 
. 
. * DGM numeric, 1 var
. *********************
. * target long and string, method long and numeric, true variable 1 level
. use $testpath/data/simlongESTPM_longE_longM.dta, clear

. siman setup, rep(rep) dgm(dgm) target(estimand) method(method) estimate(est) se(se) true(true)

                   SUMMARY OF DATA
_____________________________________________________

Data-generating mechanism (DGM)
  DGM variables (# levels):       dgm (2) 
  Total number of DGMs:           2

Targets
  Variable containing targets:    estimand
  Number of targets:              2
  Target values:                  beta; gamma

Methods
  Variable containing methods:    method
  Number of methods:              2
  Method values:                  1; 2

Repetition-level output
  Point estimate variable:        est
  SE variable:                    se
  df variable:                    N/A
  Conf. limit variables:          N/A
  p-value variable:               N/A
  True value variable:            true

Estimates data                    in data
Performance statistics            not in data
_____________________________________________________

. siman comparemethodsscatter if estimand=="beta" & dgm==2
siman comparemethodsscatter will draw 1 graph showing 2 methods
Graph cms_1 is for dgm=2, estimand=beta

. * graphs
. siman scatter, ytitle("test y-title") xtitle("test x-title") name("scatter_test1", replace) 
siman scatter will draw 1 graph with 8 panels

. 
. siman swarm, graphoptions(ytitle("test y-title") xtitle("test x-title")) name("swarm_test1", repla
> ce)
siman swarm will draw 1 graph with 4 panels

. 
. siman zipplot, bygr(cols(4))
siman zipplot will draw 1 graph with 8 panels

. siman zipplot, legend(order(1 "Stalk" 2 "Carrot")) xtit("x-title") ylab(95) noncoveroptions(pstyle
> (p3)) ///
>     coveroptions(pstyle(p4)) scatteroptions(mcol(gray%50)) truegraphoptions(pstyle(p6)) ///
>     bygr(cols(4)) name("zipplot_test1", replace) ymin(60)
siman zipplot will draw 1 graph with 8 panels

. 
. siman comparemethodsscatter, title("testtitle") subgr(xtit("testaxis")) name("cms_test1", replace)
>  
siman comparemethodsscatter will draw 4 graphs each showing 2 methods
Consider reducing the number of graphs using 'if' condition
Graph cms_test1_1 is for dgm=1, estimand=beta
Graph cms_test1_2 is for dgm=1, estimand=gamma
Graph cms_test1_3 is for dgm=2, estimand=beta
Graph cms_test1_4 is for dgm=2, estimand=gamma

. 
. siman blandaltman, ytitle("test y-title") xtitle("test x-title") name("ba_test1", replace) 
siman blandaltman will draw 4 graphs each with 1 panel
Consider reducing the number of graphs/panels using 'if' condition or 'by' option

. 
. siman analyse
siman analyse has run successfully

. siman table, tabdisp

--------------------------------------------------------
dgm and   |
Performan |             estimand and method             
ce        | ------- beta -------    ------- gamma ------
measure   |         1          2            1          2
----------+---------------------------------------------
1         |
  Estreps |      1000       1000         1000       1000
          |                                             
          | 
   Sereps |      1000       1000         1000       1000
          |                                             
          | 
     Bias | -.0043991  -.0025973     .0005151   .0056354
          |  .0024993   .0035644     .0025476   .0035789
          | 
  Pctbias |                                             
          |                                             
          | 
     Mean | -.0043991  -.0025973     .0005151   .0056354
          |  .0024993   .0035644     .0025476   .0035789
          | 
    Empse |  .0790336   .1127159     .0805615   .1131762
          |  .0017681   .0025217     .0018023    .002532
          | 
  Relprec |         0   -50.8353            0  -49.33068
          |         0    2.28676            0   2.314097
          | 
      Mse |  .0062594   .0126989     .0064839   .0128278
          |  .0002881   .0006187     .0002847   .0005329
          | 
     Rmse |  .0791165   .1126895     .0805229   .1132599
          |  .0018209   .0027454     .0017676   .0023524
          | 
  Modelse |  .0787452   .1136343     .0788425   .1140264
          |  .0001572   .0003405     .0001466   .0003426
          | 
  Ciwidth |  .3080681   .4434751     .3085282   .4450112
          |  .0006123   .0013217     .0005716   .0013243
          | 
 Relerror | -.3649609   .8147949    -2.133844   .7512448
          |  2.237882   2.275551     2.196998   2.274225
          | 
    Cover |      94.7       95.7         94.5       96.4
          |  .7084563   .6414907     .7209369   .5891009
          | 
    Power |       5.3        4.3          5.5        3.6
          |  .7084561   .6414905     .7209369    .589101
----------+---------------------------------------------
2         |
  Estreps |      1000       1000         1000       1000
          |                                             
          | 
   Sereps |      1000       1000         1000       1000
          |                                             
          | 
     Bias | -.0046965  -.0058509     .0005948   .0065072
          |  .0028908   .0039932     .0029417   .0041326
          | 
  Pctbias |                                             
          |                                             
          | 
     Mean | -.0046965  -.0058509     .0005948   .0065072
          |  .0028908   .0039932     .0029417   .0041326
          | 
    Empse |  .0914144   .1262755     .0930244   .1306846
          |  .0020451    .002825     .0020811   .0029237
          | 
  Relprec |         0  -47.59274            0  -49.33068
          |         0   2.430245            0   2.314097
          | 
      Mse |  .0083703   .0159638     .0086452   .0171037
          |  .0003797   .0007445     .0003795   .0007105
          | 
     Rmse |  .0914893   .1263479     .0929798   .1307813
          |  .0020748   .0029462      .002041   .0027163
          | 
  Modelse |  .0910296   .1313619     .0910394   .1316664
          |  .0001752   .0003826     .0001693   .0003955
          | 
  Ciwidth |   .356176   .5127883     .3562577   .5138547
          |   .000683   .0014841     .0006601   .0015292
          | 
 Relerror |  -.420924   4.028049    -2.133846    .751246
          |  2.236001   2.346937     2.196998   2.274225
          | 
    Cover |        95       95.6         94.5       96.4
          |  .6892024   .6485677     .7209369   .5891009
          | 
    Power |         5        4.4          5.5        3.6
          |  .6892024   .6485677     .7209369    .589101
--------------------------------------------------------
Note: Coverage and Power calculated at 95% level
Note: where there are multiple entries in the table, they are the estimated performance measure,
  followed by its Monte Carlo standard error

. 
. siman lollyplot, xtitle("test x-title") ytitle("test y-title") name("lollyplot_test1", replace)
Performance measures not specified: defaulting to bias empse cover
siman lollyplot will draw 2 graphs with 6 panels (3 PMs by 2 DGMs)

. 
. 
. * DGM numeric with string labels, 1 var
. *****************************************
. 
. * target wide and numeric with string labels, method wide and string, true value
. use $testpath/data/simlongESTPM_longE_longM.dta, clear

. encode estimand, gen(estimand_num)

. drop estimand

. rename estimand_num estimand

. label define dgml 1 "D1" 2 "D2"

. label values dgm dgml

. gen method_str = ""
(8,000 missing values generated)

. replace method_str = "A" if method == 1
(4,000 real changes made)

. replace method_str = "B" if method == 2
(4,000 real changes made)

. drop method

. rename method_str method

. drop true

. reshape wide est se, i(rep dgm estimand) j(method, string)
(j = A B)

Data                               Long   ->   Wide
-----------------------------------------------------------------------------
Number of observations            8,000   ->   4,000       
Number of variables                   6   ->   7           
j variable (2 values)            method   ->   (dropped)
xij variables:
                                    est   ->   estA estB
                                     se   ->   seA seB
-----------------------------------------------------------------------------

. reshape wide estA estB seA seB, i(rep dgm) j(estimand)
(j = 1 2)

Data                               Long   ->   Wide
-----------------------------------------------------------------------------
Number of observations            4,000   ->   2,000       
Number of variables                   7   ->   10          
j variable (2 values)          estimand   ->   (dropped)
xij variables:
                                   estA   ->   estA1 estA2
                                   estB   ->   estB1 estB2
                                    seA   ->   seA1 seA2
                                    seB   ->   seB1 seB2
-----------------------------------------------------------------------------

. siman setup, rep(rep) dgm(dgm) target(1 2) method(A B) estimate(est) se(se) true(0) order(method)

                   SUMMARY OF DATA
_____________________________________________________

Data-generating mechanism (DGM)
  DGM variables (# levels):       dgm (2) 
  Total number of DGMs:           2

Targets
  Variable containing targets:    target
  Number of targets:              2
  Target values:                  1 2

Methods
  Variable containing methods:    method
  Number of methods:              2
  Method values:                  A; B

Repetition-level output
  Point estimate variable:        est
  SE variable:                    se
  df variable:                    N/A
  Conf. limit variables:          N/A
  p-value variable:               N/A
  True value variable:            _true (created)

Estimates data                    in data
Performance statistics            not in data
_____________________________________________________

. * has made target string
.  
. * graphs
. siman scatter, ytitle("test y-title") xtitle("test x-title") name("scatter_test2", replace) 
siman scatter will draw 1 graph with 8 panels

. 
. siman swarm, graphoptions(ytitle("test y-title") xtitle("test x-title")) name("swarm_test2", repla
> ce)
siman swarm will draw 1 graph with 4 panels

. 
. siman zipplot, legend(order(1 "Stalk" 2 "Carrot")) xtit("x-title") ytit("y-title") ylab(0 40 100) 
> noncoveroptions(pstyle(p3)) ///
> coveroptions(pstyle(p4)) scatteroptions(mcol(gray%50)) truegraphoptions(pstyle(p6)) name("zipplot_
> test2", replace)
siman zipplot will draw 1 graph with 8 panels

. 
. siman comparemethodsscatter, title("testtitle") subgr(xtit("testaxis")) name("cms_test2", replace)
>  
siman comparemethodsscatter will draw 4 graphs each showing 2 methods
Consider reducing the number of graphs using 'if' condition
Graph cms_test2_1 is for dgm=D1, target=1
Graph cms_test2_2 is for dgm=D1, target=2
Graph cms_test2_3 is for dgm=D2, target=1
Graph cms_test2_4 is for dgm=D2, target=2

. 
. siman blandaltman, ytitle("test y-title") xtitle("test x-title") name("ba_test2", replace)        
siman blandaltman will draw 4 graphs each with 1 panel
Consider reducing the number of graphs/panels using 'if' condition or 'by' option

. 
. siman analyse
siman analyse has run successfully

. siman table, tabdisp

--------------------------------------------------------
dgm and   |
Performan |              target and method              
ce        | --------- 1 --------    --------- 2 --------
measure   |         A          B            A          B
----------+---------------------------------------------
D1        |
  Estreps |      1000       1000         1000       1000
          |                                             
          | 
   Sereps |      1000       1000         1000       1000
          |                                             
          | 
     Bias | -.0043991  -.0025973     .0005151   .0056354
          |  .0024993   .0035644     .0025476   .0035789
          | 
  Pctbias |                                             
          |                                             
          | 
     Mean | -.0043991  -.0025973     .0005151   .0056354
          |  .0024993   .0035644     .0025476   .0035789
          | 
    Empse |  .0790336   .1127159     .0805615   .1131762
          |  .0017681   .0025217     .0018023    .002532
          | 
  Relprec |         0   -50.8353            0  -49.33068
          |         0    2.28676            0   2.314097
          | 
      Mse |  .0062594   .0126989     .0064839   .0128278
          |  .0002881   .0006187     .0002847   .0005329
          | 
     Rmse |  .0791165   .1126895     .0805229   .1132599
          |  .0018209   .0027454     .0017676   .0023524
          | 
  Modelse |  .0787452   .1136343     .0788425   .1140264
          |  .0001572   .0003405     .0001466   .0003426
          | 
  Ciwidth |  .3080681   .4434751     .3085282   .4450112
          |  .0006123   .0013217     .0005716   .0013243
          | 
 Relerror | -.3649609   .8147949    -2.133844   .7512448
          |  2.237882   2.275551     2.196998   2.274225
          | 
    Cover |      94.7       95.7         94.5       96.4
          |  .7084563   .6414907     .7209369   .5891009
          | 
    Power |       5.3        4.3          5.5        3.6
          |  .7084561   .6414905     .7209369    .589101
----------+---------------------------------------------
D2        |
  Estreps |      1000       1000         1000       1000
          |                                             
          | 
   Sereps |      1000       1000         1000       1000
          |                                             
          | 
     Bias | -.0046965  -.0058509     .0005948   .0065072
          |  .0028908   .0039932     .0029417   .0041326
          | 
  Pctbias |                                             
          |                                             
          | 
     Mean | -.0046965  -.0058509     .0005948   .0065072
          |  .0028908   .0039932     .0029417   .0041326
          | 
    Empse |  .0914144   .1262755     .0930244   .1306846
          |  .0020451    .002825     .0020811   .0029237
          | 
  Relprec |         0  -47.59274            0  -49.33068
          |         0   2.430245            0   2.314097
          | 
      Mse |  .0083703   .0159638     .0086452   .0171037
          |  .0003797   .0007445     .0003795   .0007105
          | 
     Rmse |  .0914893   .1263479     .0929798   .1307813
          |  .0020748   .0029462      .002041   .0027163
          | 
  Modelse |  .0910296   .1313619     .0910394   .1316664
          |  .0001752   .0003826     .0001693   .0003955
          | 
  Ciwidth |   .356176   .5127883     .3562577   .5138547
          |   .000683   .0014841     .0006601   .0015292
          | 
 Relerror |  -.420924   4.028049    -2.133846    .751246
          |  2.236001   2.346937     2.196998   2.274225
          | 
    Cover |        95       95.6         94.5       96.4
          |  .6892024   .6485677     .7209369   .5891009
          | 
    Power |         5        4.4          5.5        3.6
          |  .6892024   .6485677     .7209369    .589101
--------------------------------------------------------
Note: Coverage and Power calculated at 95% level
Note: where there are multiple entries in the table, they are the estimated performance measure,
  followed by its Monte Carlo standard error

. 
. siman lollyplot, xtitle("test x-title") ytitle("test y-title") name("lollyplot_test2", replace)
Performance measures not specified: defaulting to bias empse cover
siman lollyplot will draw 2 graphs with 6 panels (3 PMs by 2 DGMs)

. 
.  
. * DGM string, 1 var
. ********************
. * target and method long numeric string labels, true missing
. use $testpath/data/simlongESTPM_longE_longM.dta, clear

. encode estimand, gen(estimand_num)

. drop estimand

. rename estimand_num estimand

. label define methodl 1 "A" 2 "B"

. label values method methodl

. gen dgm_str = ""
(8,000 missing values generated)

. replace dgm_str = "1" if dgm == 1
(4,000 real changes made)

. replace dgm_str = "2" if dgm == 2
(4,000 real changes made)

. drop dgm true

. rename dgm_str dgm

. 
. siman setup, rep(rep) dgm(dgm) target(estimand) method(method) estimate(est) se(se) 
Warning: dgm variable dgm has been converted from string to numeric. If you require its levels to be
  ordered differently, encode dgm as numeric before running -siman setup-.

                   SUMMARY OF DATA
_____________________________________________________

Data-generating mechanism (DGM)
  DGM variables (# levels):       dgm (2) 
  Total number of DGMs:           2

Targets
  Variable containing targets:    estimand
  Number of targets:              2
  Target values:                  beta; gamma

Methods
  Variable containing methods:    method
  Number of methods:              2
  Method values:                  A; B

Repetition-level output
  Point estimate variable:        est
  SE variable:                    se
  df variable:                    N/A
  Conf. limit variables:          N/A
  p-value variable:               N/A
  True value variable:            N/A

Estimates data                    in data
Performance statistics            not in data
_____________________________________________________

. * graphs
. siman scatter, ytitle("test y-title") xtitle("test x-title") name("scatter_test3", replace) 
siman scatter will draw 1 graph with 8 panels

. 
. siman swarm, graphoptions(ytitle("test y-title") xtitle("test x-title")) name("swarm_test3", repla
> ce)
siman swarm will draw 1 graph with 4 panels

. 
. cap siman zipplot, legend(order(1 "Stalk" 2 "Carrot")) xtit("x-title") ytit("y-title") ylab(0 40 1
> 00) noncoveroptions(pstyle(p3)) ///
> coveroptions(pstyle(p4)) scatteroptions(mcol(gray%50)) truegraphoptions(pstyle(p6)) name("zipplot_
> test3", replace)

. assert _rc == 498

. * siman zipplot can not be run w/o true value as required
. 
. siman comparemethodsscatter, title("testtitle") subgr(xtit("testaxis")) name("cms_test3", replace)
>  
siman comparemethodsscatter will draw 4 graphs each showing 2 methods
Consider reducing the number of graphs using 'if' condition
Graph cms_test3_1 is for dgm=1, estimand=beta
Graph cms_test3_2 is for dgm=1, estimand=gamma
Graph cms_test3_3 is for dgm=2, estimand=beta
Graph cms_test3_4 is for dgm=2, estimand=gamma

. 
. siman blandaltman, ytitle("test y-title") xtitle("test x-title") name("ba_test3", replace) 
siman blandaltman will draw 4 graphs each with 1 panel
Consider reducing the number of graphs/panels using 'if' condition or 'by' option

. 
. siman analyse
siman analyse has run successfully

. siman table, tabdisp

--------------------------------------------------------
dgm and   |
Performan |             estimand and method             
ce        | ------- beta -------    ------- gamma ------
measure   |         A          B            A          B
----------+---------------------------------------------
1         |
  Estreps |      1000       1000         1000       1000
          |                                             
          | 
   Sereps |      1000       1000         1000       1000
          |                                             
          | 
     Mean | -.0043991  -.0025973     .0005151   .0056354
          |  .0024993   .0035644     .0025476   .0035789
          | 
    Empse |  .0790336   .1127159     .0805615   .1131762
          |  .0017681   .0025217     .0018023    .002532
          | 
  Relprec |         0   -50.8353            0  -49.33068
          |         0    2.28676            0   2.314097
          | 
  Modelse |  .0787452   .1136343     .0788425   .1140264
          |  .0001572   .0003405     .0001466   .0003426
          | 
  Ciwidth |  .3080681   .4434751     .3085282   .4450112
          |  .0006123   .0013217     .0005716   .0013243
          | 
 Relerror | -.3649609   .8147949    -2.133844   .7512448
          |  2.237882   2.275551     2.196998   2.274225
          | 
    Power |       5.3        4.3          5.5        3.6
          |  .7084561   .6414905     .7209369    .589101
----------+---------------------------------------------
2         |
  Estreps |      1000       1000         1000       1000
          |                                             
          | 
   Sereps |      1000       1000         1000       1000
          |                                             
          | 
     Mean | -.0046965  -.0058509     .0005948   .0065072
          |  .0028908   .0039932     .0029417   .0041326
          | 
    Empse |  .0914144   .1262755     .0930244   .1306846
          |  .0020451    .002825     .0020811   .0029237
          | 
  Relprec |         0  -47.59274            0  -49.33068
          |         0   2.430245            0   2.314097
          | 
  Modelse |  .0910296   .1313619     .0910394   .1316664
          |  .0001752   .0003826     .0001693   .0003955
          | 
  Ciwidth |   .356176   .5127883     .3562577   .5138547
          |   .000683   .0014841     .0006601   .0015292
          | 
 Relerror |  -.420924   4.028049    -2.133846    .751246
          |  2.236001   2.346937     2.196998   2.274225
          | 
    Power |         5        4.4          5.5        3.6
          |  .6892024   .6485677     .7209369    .589101
--------------------------------------------------------
Note: Power calculated at 95% level
Note: where there are multiple entries in the table, they are the estimated performance measure,
  followed by its Monte Carlo standard error

. 
. siman lollyplot, xtitle("test x-title") ytitle("test y-title") name("lollyplot_test3", replace)
Performance measures not specified, no true values: defaulting to mean empse relerror
siman lollyplot will draw 2 graphs with 6 panels (3 PMs by 2 DGMs)

.  
.  
. * DGM missing
. ************** 
. * Target numeric, method missing, true > 1 level (different true values per target)
. use $testpath/data/simlongESTPM_longE_longM.dta, clear

. replace true=0.5 if estimand=="beta"
(4,000 real changes made)

. keep if dgm==1 & method==1 // new 20dec2023 - reproducibly selects records
(6,000 observations deleted)

. drop dgm method

. gen estimand_num = .
(2,000 missing values generated)

. replace estimand_num = 1 if estimand == "beta"
(1,000 real changes made)

. replace estimand_num = 2 if estimand == "gamma"
(1,000 real changes made)

. drop estimand

. rename estimand_num estimand

. *bysort rep estimand: gen repitionindi=_n
. *drop if repitionindi>1 // pre 20dec2023 non-reproducibly selects records
. *drop repitionindi
. siman setup, rep(rep) target(estimand) estimate(est) se(se) true(true)
Warning: no method specified. siman will assume there is only one method and create a variable
  _method. If this is a mistake, enter method() option in -siman setup-.

                   SUMMARY OF DATA
_____________________________________________________

Data-generating mechanism (DGM)
  DGM variables (# levels):       N/A
  Total number of DGMs:           1

Targets
  Variable containing targets:    estimand
  Number of targets:              2
  Target values:                  1; 2

Methods
  Variable containing methods:    _method (created)
  Number of methods:              1
  Method values:                  1

Repetition-level output
  Point estimate variable:        est
  SE variable:                    se
  df variable:                    N/A
  Conf. limit variables:          N/A
  p-value variable:               N/A
  True value variable:            true

Estimates data                    in data
Performance statistics            not in data
_____________________________________________________

. 
. * graphs
. siman scatter, ytitle("test y-title") xtitle("test x-title") name("scatter_test4", replace) 
siman scatter will draw 1 graph with 2 panels

. 
. siman zipplot, legend(order(3 "Carrot" 4 "Stalk")) xtit("x-title") ytit("y-title") noncoveroptions
> (pstyle(p3)) ///
> coveroptions(pstyle(p4)) scatteroptions(mcol(gray%50)) truegraphoptions(pstyle(p6)) name("zipplot_
> test4", replace)    
siman zipplot will draw 1 graph with 2 panels

. 
. cap siman comparemethodsscatter, title("testtitle") subgr(xtit("testaxis")) name("cms_test4", repl
> ace) 

. assert _rc == 498

. * siman cms can not be run without method as required
. 
. cap siman blandaltman, ytitle("test y-title") xtitle("test x-title") name("ba_test4", replace) 

. assert _rc == 498

. * siman bland altman can not be run without method as required
. 
. 
. * now try with missing target
. use $testpath/data/simlongESTPM_longE_longM.dta, clear

. keep if estimand=="beta" // new 20dec2023 - reproducibly selects records
(4,000 observations deleted)

. drop estimand

. *bysort rep dgm method: gen repitionindi=_n
. *drop if repitionindi == 2 // pre 20dec2023 non-reproducibly selects records
. *drop repitionindi
. siman setup, rep(rep) dgm(dgm) method(method) estimate(est) se(se) true(true)

                   SUMMARY OF DATA
_____________________________________________________

Data-generating mechanism (DGM)
  DGM variables (# levels):       dgm (2) 
  Total number of DGMs:           2

Targets
  Variable containing targets:    N/A
  Number of targets:              1
  Target values:                  

Methods
  Variable containing methods:    method
  Number of methods:              2
  Method values:                  1; 2

Repetition-level output
  Point estimate variable:        est
  SE variable:                    se
  df variable:                    N/A
  Conf. limit variables:          N/A
  p-value variable:               N/A
  True value variable:            true

Estimates data                    in data
Performance statistics            not in data
_____________________________________________________

.  
. * graphs
. siman scatter, ytitle("test y-title") xtitle("test x-title") name("scatter_test5", replace) 
siman scatter will draw 1 graph with 4 panels

. 
. siman swarm, graphoptions(ytitle("test y-title") xtitle("test x-title")) name("swarm_test5", repla
> ce)
siman swarm will draw 1 graph with 2 panels

. 
. siman zipplot, legend(order(1 "Stalk" 2 "Carrot")) xtit("x-title") ytit("y-title") ylab(0 40 100) 
> noncoveroptions(pstyle(p3)) ///
> coveroptions(pstyle(p4)) scatteroptions(mcol(gray%50)) truegraphoptions(pstyle(p6)) name("zipplot_
> test5", replace)
siman zipplot will draw 1 graph with 4 panels

. 
. siman comparemethodsscatter, title("testtitle") subgr(xtit("testaxis")) name("cms_test5", replace)
>  
siman comparemethodsscatter will draw 2 graphs each showing 2 methods
Graph cms_test5_1 is for dgm=1
Graph cms_test5_2 is for dgm=2

. 
. siman blandaltman, ytitle("test y-title") xtitle("test x-title") name("ba_test5", replace) 
siman blandaltman will draw 2 graphs each with 1 panel

. 
. siman analyse
siman analyse has run successfully

. siman table, tabdisp

--------------------------------
dgm and   |
Performan |
ce        |        method       
measure   |         1          2
----------+---------------------
1         |
  Estreps |      1000       1000
          |                     
          | 
   Sereps |      1000       1000
          |                     
          | 
     Bias | -.0043991  -.0025973
          |  .0024993   .0035644
          | 
  Pctbias |                     
          |                     
          | 
     Mean | -.0043991  -.0025973
          |  .0024993   .0035644
          | 
    Empse |  .0790336   .1127159
          |  .0017681   .0025217
          | 
  Relprec |         0   -50.8353
          |         0    2.28676
          | 
      Mse |  .0062594   .0126989
          |  .0002881   .0006187
          | 
     Rmse |  .0791165   .1126895
          |  .0018209   .0027454
          | 
  Modelse |  .0787452   .1136343
          |  .0001572   .0003405
          | 
  Ciwidth |  .3080681   .4434751
          |  .0006123   .0013217
          | 
 Relerror | -.3649609   .8147949
          |  2.237882   2.275551
          | 
    Cover |      94.7       95.7
          |  .7084563   .6414907
          | 
    Power |       5.3        4.3
          |  .7084561   .6414905
----------+---------------------
2         |
  Estreps |      1000       1000
          |                     
          | 
   Sereps |      1000       1000
          |                     
          | 
     Bias | -.0046965  -.0058509
          |  .0028908   .0039932
          | 
  Pctbias |                     
          |                     
          | 
     Mean | -.0046965  -.0058509
          |  .0028908   .0039932
          | 
    Empse |  .0914144   .1262755
          |  .0020451    .002825
          | 
  Relprec |         0  -47.59274
          |         0   2.430245
          | 
      Mse |  .0083703   .0159638
          |  .0003797   .0007445
          | 
     Rmse |  .0914893   .1263479
          |  .0020748   .0029462
          | 
  Modelse |  .0910296   .1313619
          |  .0001752   .0003826
          | 
  Ciwidth |   .356176   .5127883
          |   .000683   .0014841
          | 
 Relerror |  -.420924   4.028049
          |  2.236001   2.346937
          | 
    Cover |        95       95.6
          |  .6892024   .6485677
          | 
    Power |         5        4.4
          |  .6892024   .6485677
--------------------------------
Note: Coverage and Power calculated at 95% level
Note: where there are multiple entries in the table, they are the estimated performance measure,
  followed by its Monte Carlo standard error

. 
. siman lollyplot, xtitle("test x-title") ytitle("test y-title") name("lollyplot_test5")
Performance measures not specified: defaulting to bias empse cover
siman lollyplot will draw 1 graph with 6 panels (3 PMs by 2 DGMs)

.  
.  
. * dgm has missing values AND method labels have spaces
. use $testpath/data/simlongESTPM_longE_longM.dta, clear

. replace dgm=. if dgm==2
(4,000 real changes made, 4,000 to missing)

. label def mymethod 1 "First method" 2 "Method, second"

. label val method mymethod

. siman setup, rep(rep) target(esti) dgm(dgm) method(method) estimate(est) se(se) true(true) dgmmiss
> ingok
Warning: dgm variable dgm contains missing values. You have used the dgmmissingok option, so siman
  will procede, but please beware of problems.

                   SUMMARY OF DATA
_____________________________________________________

Data-generating mechanism (DGM)
  DGM variables (# levels):       dgm (2) 
  Total number of DGMs:           2

Targets
  Variable containing targets:    estimand
  Number of targets:              2
  Target values:                  beta; gamma

Methods
  Variable containing methods:    method
  Number of methods:              2
  Method values:                  First method; Method, second

Repetition-level output
  Point estimate variable:        est
  SE variable:                    se
  df variable:                    N/A
  Conf. limit variables:          N/A
  p-value variable:               N/A
  True value variable:            true

Estimates data                    in data
Performance statistics            not in data
_____________________________________________________

.  
. siman scatter, ytitle("test y-title") xtitle("test x-title") name("scatter_test5a", replace) 
siman scatter will draw 1 graph with 8 panels

. 
. siman swarm, graphoptions(ytitle("test y-title") xtitle("test x-title")) name("swarm_test5a", repl
> ace)
siman swarm will draw 1 graph with 4 panels

. 
. siman zipplot, legend(order(1 "Stalk" 2 "Carrot")) xtit("x-title") ytit("y-title") ylab(0 40 100) 
> noncoveroptions(pstyle(p3)) ///
> coveroptions(pstyle(p4)) scatteroptions(mcol(gray%50)) truegraphoptions(pstyle(p6)) name("zipplot_
> test5a", replace)
siman zipplot will draw 1 graph with 8 panels

. 
. siman comparemethodsscatter if estimand=="beta", title("testtitle") subgr(xtit("testaxis")) name("
> cms_test5a", replace) 
siman comparemethodsscatter will draw 2 graphs each showing 2 methods
Graph cms_test5a_1 is for dgm=1, estimand=beta
Graph cms_test5a_2 is for dgm=., estimand=beta

. 
. siman blandaltman if estimand=="beta", ytitle("test y-title") xtitle("test x-title") name("ba_test
> 5a", replace) 
siman blandaltman will draw 2 graphs each with 1 panel

. 
. siman analyse
siman analyse has run successfully

. siman table, tabdisp

----------------------------------------------------------------------------
dgm and   |
Performan |                       estimand and method                       
ce        | ------------ beta ------------    ------------ gamma -----------
measure   |   First method  Method, second      First method  Method, second
----------+-----------------------------------------------------------------
1         |
  Estreps |           1000            1000              1000            1000
          |                                                                 
          | 
   Sereps |           1000            1000              1000            1000
          |                                                                 
          | 
     Bias |      -.0043991       -.0025973          .0005151        .0056354
          |       .0024993        .0035644          .0025476        .0035789
          | 
  Pctbias |                                                                 
          |                                                                 
          | 
     Mean |      -.0043991       -.0025973          .0005151        .0056354
          |       .0024993        .0035644          .0025476        .0035789
          | 
    Empse |       .0790336        .1127159          .0805615        .1131762
          |       .0017681        .0025217          .0018023         .002532
          | 
  Relprec |              0        -50.8353                 0       -49.33068
          |              0         2.28676                 0        2.314097
          | 
      Mse |       .0062594        .0126989          .0064839        .0128278
          |       .0002881        .0006187          .0002847        .0005329
          | 
     Rmse |       .0791165        .1126895          .0805229        .1132599
          |       .0018209        .0027454          .0017676        .0023524
          | 
  Modelse |       .0787452        .1136343          .0788425        .1140264
          |       .0001572        .0003405          .0001466        .0003426
          | 
  Ciwidth |       .3080681        .4434751          .3085282        .4450112
          |       .0006123        .0013217          .0005716        .0013243
          | 
 Relerror |      -.3649609        .8147949         -2.133844        .7512448
          |       2.237882        2.275551          2.196998        2.274225
          | 
    Cover |           94.7            95.7              94.5            96.4
          |       .7084563        .6414907          .7209369        .5891009
          | 
    Power |            5.3             4.3               5.5             3.6
          |       .7084561        .6414905          .7209369         .589101
----------+-----------------------------------------------------------------
.         |
  Estreps |           1000            1000              1000            1000
          |                                                                 
          | 
   Sereps |           1000            1000              1000            1000
          |                                                                 
          | 
     Bias |      -.0046965       -.0058509          .0005948        .0065072
          |       .0028908        .0039932          .0029417        .0041326
          | 
  Pctbias |                                                                 
          |                                                                 
          | 
     Mean |      -.0046965       -.0058509          .0005948        .0065072
          |       .0028908        .0039932          .0029417        .0041326
          | 
    Empse |       .0914144        .1262755          .0930244        .1306846
          |       .0020451         .002825          .0020811        .0029237
          | 
  Relprec |              0       -47.59274                 0       -49.33068
          |              0        2.430245                 0        2.314097
          | 
      Mse |       .0083703        .0159638          .0086452        .0171037
          |       .0003797        .0007445          .0003795        .0007105
          | 
     Rmse |       .0914893        .1263479          .0929798        .1307813
          |       .0020748        .0029462           .002041        .0027163
          | 
  Modelse |       .0910296        .1313619          .0910394        .1316664
          |       .0001752        .0003826          .0001693        .0003955
          | 
  Ciwidth |        .356176        .5127883          .3562577        .5138547
          |        .000683        .0014841          .0006601        .0015292
          | 
 Relerror |       -.420924        4.028049         -2.133846         .751246
          |       2.236001        2.346937          2.196998        2.274225
          | 
    Cover |             95            95.6              94.5            96.4
          |       .6892024        .6485677          .7209369        .5891009
          | 
    Power |              5             4.4               5.5             3.6
          |       .6892024        .6485677          .7209369         .589101
----------------------------------------------------------------------------
Note: Coverage and Power calculated at 95% level
Note: where there are multiple entries in the table, they are the estimated performance measure,
  followed by its Monte Carlo standard error

. 
. siman lollyplot, xtitle("test x-title") ytitle("test y-title") name("lollyplot_test5a", replace)
Performance measures not specified: defaulting to bias empse cover
siman lollyplot will draw 2 graphs with 6 panels (3 PMs by 2 DGMs)

. 
. 
. 
. * more than 3 methods for plots, methlist option
. ****************************************************
. clear all

. prog drop _all

. use $testpath/data/bvsim_all_out.dta, clear

. rename _dnum dnum

. drop simno hazard hazcens shape cens pmcar n truebeta truegamma corr mdm

. drop if _n>100
(17,900 observations deleted)

. reshape long beta_ sebeta_ gamma_ segamma_, i(dnum) j(method)
(j = 1 2 3 4 5 6 7 8 9 10)

Data                               Wide   ->   Long
-----------------------------------------------------------------------------
Number of observations              100   ->   1,000       
Number of variables                  41   ->   6           
j variable (10 values)                    ->   method
xij variables:
              beta_1 beta_2 ... beta_10   ->   beta_
        sebeta_1 sebeta_2 ... sebeta_10   ->   sebeta_
           gamma_1 gamma_2 ... gamma_10   ->   gamma_
     segamma_1 segamma_2 ... segamma_10   ->   segamma_
-----------------------------------------------------------------------------

. rename beta_ estbeta

. rename sebeta_ sebeta

. rename gamma_ estgamma

. rename segamma_ segamma

. reshape long est se, i(dnum method) j(target "beta" "gamma")

Data                               Wide   ->   Long
-----------------------------------------------------------------------------
Number of observations            1,000   ->   2,000       
Number of variables                   6   ->   5           
j variable (2 values)                     ->   target
xij variables:
                       estbeta estgamma   ->   est
                         sebeta segamma   ->   se
-----------------------------------------------------------------------------

. gen dgm = 1

. expand 2, gen(dupindicator)
(2,000 observations created)

. replace dgm=2 if dupindicator==1
(2,000 real changes made)

. drop dupindicator

. 
. siman setup, rep(dnum) dgm(dgm) est(est) se(se) method(method) target(target)

                   SUMMARY OF DATA
_____________________________________________________

Data-generating mechanism (DGM)
  DGM variables (# levels):       dgm (2) 
  Total number of DGMs:           2

Targets
  Variable containing targets:    target
  Number of targets:              2
  Target values:                  beta; gamma

Methods
  Variable containing methods:    method
  Number of methods:              10
  Method values:                  1; 2; 3; 4; 5; 6; 7; 8; 9; 10

Repetition-level output
  Point estimate variable:        est
  SE variable:                    se
  df variable:                    N/A
  Conf. limit variables:          N/A
  p-value variable:               N/A
  True value variable:            N/A

Estimates data                    in data
Performance statistics            not in data
_____________________________________________________

. siman comparemethodsscatter if target=="beta" & dgm==1, methlist(3 7) name("cms_test6", replace) 
siman comparemethodsscatter will draw 1 graph showing 2 methods
Graph cms_test6_1 is for dgm=1, target=beta

. siman comparemethodsscatter if target=="beta" & dgm==1, methlist(3/7) combine name("cms_test6a", r
> eplace) 
siman comparemethodsscatter will draw 1 graph showing 5 methods
Graph cms_test6a_1 is for dgm=1, target=beta

. siman comparemethodsscatter if target=="beta" & dgm==1
Warning: with 10 methods compared, this plot may be too dense to read.  If you find it unreadable,
  you can choose the methods to compare using -siman comparemethodsscatter, methlist(a b)- where a
  and b are the methods you are particularly interested to compare.
siman comparemethodsscatter will draw 1 graph showing 10 methods
Graph cms_1 is for dgm=1, target=beta

. siman_blandaltman, methlist(3/7) name("ba_test6", replace)
siman blandaltman will draw 4 graphs each with 4 panels
Consider reducing the number of graphs/panels using 'if' condition or 'by' option

. 
.  
.   
. **********************************************************
. * DGM defined by multiple variables with multiple levels
. * The data have 5 dgmvars, 
. *   but one (tau2) is ignored in the code below
. **********************************************************
. clear all

. prog drop _all

. use data/res.dta, clear

. keep v1 theta rho pc k exppeto expg2 var2peto var2g2 tau2

. siman setup, rep(v1) dgm(theta rho pc k tau2) method(peto g2) estimate(exp) se(var2) true(theta)
Warning: dgm variable theta has non-integer values: converting from float to double (192 real
  changes made)
Warning: dgm variable tau2 has non-integer values: converting from float to double (576 real changes
  made)

                   SUMMARY OF DATA
_____________________________________________________

Data-generating mechanism (DGM)
  DGM variables (# levels):       theta (4) rho (4) pc (4) k (3) tau2 (4) 
  Total number of DGMs:           768

Targets
  Variable containing targets:    N/A
  Number of targets:              1
  Target values:                  

Methods
  Variable containing methods:    method
  Number of methods:              2
  Method values:                  peto; g2

Repetition-level output
  Point estimate variable:        exp
  SE variable:                    var2
  df variable:                    N/A
  Conf. limit variables:          N/A
  p-value variable:               N/A
  True value variable:            theta

Estimates data                    in data
Performance statistics            not in data
_____________________________________________________

. 
. * graphs
. local useit4 theta==1 & rho==1 & k==5 // flags just 4 dgms

. local useit1 theta==1 & rho==1 & pc==1 & k==5 // flags just 1 dgm

. siman scatter if `useit4', ytitle("test y-title") xtitle("test x-title") name("scatter_test7", rep
> lace) 
siman scatter will draw 1 graph with 32 panels
Consider reducing the number of panels using 'if' condition or 'by' option

. 
. siman swarm if `useit4', graphoptions(ytitle("test y-title") xtitle("test x-title")) name("swarm_t
> est7", replace)
Ignoring non-varying theta
Ignoring non-varying rho
Ignoring non-varying k
siman swarm will draw 1 graph with 16 panels
Consider reducing the number of panels using 'if' condition or 'by' option

. 
. * siman zipplot is not appropriate for these data
. 
. serset clear

. if ${detail} == 1 siman comparemethodsscatter if `useit1', title("testtitle") subgr(xtit("testaxis
> ")) name("cms_test7", replace) 
siman comparemethodsscatter will draw 4 graphs each showing 2 methods
Consider reducing the number of graphs using 'if' condition
Graph cms_test7_1 is for theta=1, rho=no, pc=5%, k=5, tau2=0
Graph cms_test7_2 is for theta=1, rho=no, pc=5%, k=5, tau2=.05
Graph cms_test7_3 is for theta=1, rho=no, pc=5%, k=5, tau2=.1
Graph cms_test7_4 is for theta=1, rho=no, pc=5%, k=5, tau2=.2

. * this sometimes fails with error 111 "series 0 not found" from -graph combine-
. 
. if ${detail} == 1 siman blandaltman if `useit1', ytitle("test y-title") xtitle("test x-title") nam
> e("ba_test7", replace) 
siman blandaltman will draw 4 graphs each with 1 panel
Consider reducing the number of graphs/panels using 'if' condition or 'by' option

. 
. siman analyse, force
siman analyse has run successfully

. 
. siman lollyplot if `useit4', xtitle("test x-title") name("lollyplot_test7", replace)
Performance measures not specified: defaulting to bias empse cover
Ignoring non-varying dgm variable theta
Ignoring non-varying dgm variable rho
Ignoring non-varying dgm variable k
siman lollyplot will draw 1 graph with 48 panels (3 PMs by 16 DGMs)
Consider reducing the number of panel columns using 'if' condition

. * without -if k==5- you get "too many sersets" error
. 
. siman nestloop mean, dgmorder(-theta rho -pc -k tau2) ylabel(0.2 0.5 1) ytitle("Odds ratio") name(
> "nestloop_test7", replace)
siman nestloop will draw 1 graphs (1 targets * 1 performance measures)

. 
. 
. /*
> * Testing warning messages correspond to the number of panels/graphs that will be printed
> * VERY LONG
> 
> clear all
> prog drop _all
> use $testpath/data/extendedtestdata.dta, clear
> order beta pmiss
> 
> * create a string dgm var as well for testing
> gen betastring = "0"
> replace betastring = "0.25" if beta == 2
> replace betastring = "0.5" if beta == 3
> drop beta
> rename betastring beta
> 
> siman_setup, rep(rep) dgm(beta pmiss mech) method(method) target(estimand) est(b) se(se) true(beta
> true)
> 
> * scatter
> siman scatter
> siman scatter if method == "CCA"
> siman scatter if estimand == "effect"
> siman scatter if mech =="MCAR": mech
>         * this means the value whose label is "MCAR" in the value label mech
> 
> siman scatter, by(pmiss)
> siman scatter, by(estimand)
> siman scatter, by(method)
> 
> * swarm, requires 2 methods
> siman swarm
> siman swarm if (method == "CCA" | method == "MeanImp")
> siman swarm if estimand == "effect"
> siman swarm if mech =="MCAR": mech
> 
> siman swarm, by(pmiss)
> siman swarm, by(estimand)
> 
> * blandaltman
> siman blandaltman
> siman blandaltman if estimand == "effect"
> siman blandaltman if mech =="MCAR": mech
> 
> siman blandaltman, by(pmiss)
> 
> siman blandaltman, methlist(Noadj MeanImp)
> 
> * comparemethodsscatter
> siman comparemethodsscatter
> siman comparemethodsscatter if estimand == "effect"
> siman comparemethodsscatter if mech =="MCAR": mech
> 
> siman comparemethodsscatter, methlist(Noadj MeanImp)
> 
> * zipplot
> siman zipplot
> siman zipplot if method == "CCA" 
> siman zipplot if estimand == "effect"
> siman zipplot if mech =="MCAR": mech
> 
> siman zipplot, by(pmiss)
> siman zipplot, by(method)
> */
. 
. 
. di as result "*** SIMAN GRAPHS HAVE PASSED ALL THE TESTS IN `filename'.do ***"
*** SIMAN GRAPHS HAVE PASSED ALL THE TESTS IN test_graphs_main.do ***

. 
. log close
