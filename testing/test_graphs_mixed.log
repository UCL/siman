
. 
. 
.  
. * dgm defined by 1 variable
. use $testpath/data/simlongESTPM_longE_longM.dta, clear

. encode estimand, gen(estimand_num)

. drop estimand

. rename estimand_num estimand

. label define methodl 1 "A" 2 "B"

. label values method methodl

. gen dgm_str = ""
(8,000 missing values generated)

. replace dgm_str = "1" if dgm == 1
(4,000 real changes made)

. replace dgm_str = "2" if dgm == 2
(4,000 real changes made)

. drop dgm true

. rename dgm_str dgm

. 
. siman_setup, rep(rep) dgm(dgm) target(estimand) method(method) estimate(est) se(se) true(0)
Warning: dgm variable dgm has been converted from string to numeric. If you require its levels to be
  ordered differently, encode dgm as numeric before running -siman setup-.

                   SUMMARY OF DATA
_____________________________________________________

Data-generating mechanism (DGM)
  DGM variables (# levels):       dgm (2) 
  Total number of DGMs:           2

Targets
  Variable containing targets:    estimand
  Number of targets:              2
  Target values:                  beta; gamma

Methods
  Variable containing methods:    method
  Number of methods:              2
  Method values:                  A; B

Repetition-level output
  Point estimate variable:        est
  SE variable:                    se
  df variable:                    N/A
  Conf. limit variables:          N/A
  p-value variable:               N/A
  True value variable:            _true (created)

Estimates data                    in data
Performance estimates             not in data
_____________________________________________________

. 
. 
. siman scatter
siman scatter will draw 1 graph with 8 panels

. if ${detail} == 1 siman scatter est se, name(est_onyaxis)
siman scatter will draw 1 graph with 8 panels

. if ${detail} == 1 siman scatter se est, name(se_onyaxis)
siman scatter will draw 1 graph with 8 panels

. * 1 panel per dgm, method and target combination
. 
. if ${detail} == 1 siman scatter, by(dgm)
siman scatter will draw 1 graph with 2 panels

. * by dgm only
. if ${detail} == 1 siman scatter if dgm == 1, by(method)
siman scatter will draw 1 graph with 2 panels

. * by method only
. if ${detail} == 1 siman scatter, by(estimand)
siman scatter will draw 1 graph with 2 panels

. * by estimand only
. 
. siman swarm
siman swarm will draw 1 graph with 4 panels

. * 1 panel per dgm and target combination, method on y-axis
. if ${detail} == 1 siman swarm if estimand == 1
Ignoring non-varying estimand
siman swarm will draw 1 graph with 2 panels

. if ${detail} == 1 siman swarm if estimand == 2
Ignoring non-varying estimand
siman swarm will draw 1 graph with 2 panels

. 
. serset clear

. graph drop _all

. siman comparemethodsscatter 
siman comparemethodsscatter will draw 4 graphs each showing 2 methods
Consider reducing the number of graphs using 'if' condition
Graph cms_1 is for dgm=1, estimand=beta
Graph cms_2 is for dgm=1, estimand=gamma
Graph cms_3 is for dgm=2, estimand=beta
Graph cms_4 is for dgm=2, estimand=gamma

. * 1 graph per dgm and target, comparing methods
. serset clear

. graph drop _all

. if ${detail} == 1 siman comparemethodsscatter if estimand == 1
siman comparemethodsscatter will draw 2 graphs each showing 2 methods
Graph cms_1 is for dgm=1, estimand=beta
Graph cms_2 is for dgm=2, estimand=beta

. * metlist option too
. 
. siman blandaltman 
siman blandaltman will draw 4 graphs each with 1 panel
Consider reducing the number of graphs/panels using 'if' condition or 'by' option

. * 1 graph per dgm and target combination, comparison of methods
. if ${detail} == 1 siman blandaltman if dgm ==1
siman blandaltman will draw 2 graphs each with 1 panel

. if ${detail} == 1 siman blandaltman if estimand == 2
siman blandaltman will draw 2 graphs each with 1 panel

. 
. siman zipplot
siman zipplot will draw 1 graph with 8 panels

. * 1 panel per dgm, method and target combination
. if ${detail} == 1 siman zipplot, by(estimand) 
siman zipplot will draw 1 graph with 2 panels

. if ${detail} == 1 siman zipplot, by(method) 
siman zipplot will draw 1 graph with 2 panels

. 
. siman analyse
siman analyse has run successfully

. siman table

--------------------------------------------------------
dgm and   |
Performan |             estimand and method             
ce        | ------- beta -------    ------- gamma ------
measure   |         A          B            A          B
----------+---------------------------------------------
1         |
  Estreps |      1000       1000         1000       1000
          |                                             
          | 
   Sereps |      1000       1000         1000       1000
          |                                             
          | 
     Bias | -.0043991  -.0025973     .0005151   .0056354
          |  .0024993   .0035644     .0025476   .0035789
          | 
  Pctbias |                                             
          |                                             
          | 
     Mean | -.0043991  -.0025973     .0005151   .0056354
          |  .0024993   .0035644     .0025476   .0035789
          | 
    Empse |  .0790336   .1127159     .0805615   .1131762
          |  .0017681   .0025217     .0018023    .002532
          | 
  Relprec |         0   -50.8353            0  -49.33068
          |         0    2.28676            0   2.314097
          | 
      Mse |  .0062594   .0126989     .0064839   .0128278
          |  .0002881   .0006187     .0002847   .0005329
          | 
     Rmse |  .0791165   .1126895     .0805229   .1132599
          |  .0018209   .0027454     .0017676   .0023524
          | 
  Modelse |  .0787452   .1136343     .0788425   .1140264
          |  .0001572   .0003405     .0001466   .0003426
          | 
  Ciwidth |  .3080681   .4434751     .3085282   .4450112
          |  .0006123   .0013217     .0005716   .0013243
          | 
 Relerror | -.3649609   .8147949    -2.133844   .7512448
          |  2.237882   2.275551     2.196998   2.274225
          | 
    Cover |      94.7       95.7         94.5       96.4
          |  .7084563   .6414907     .7209369   .5891009
          | 
    Power |       5.3        4.3          5.5        3.6
          |  .7084561   .6414905     .7209369    .589101
----------+---------------------------------------------
2         |
  Estreps |      1000       1000         1000       1000
          |                                             
          | 
   Sereps |      1000       1000         1000       1000
          |                                             
          | 
     Bias | -.0046965  -.0058509     .0005948   .0065072
          |  .0028908   .0039932     .0029417   .0041326
          | 
  Pctbias |                                             
          |                                             
          | 
     Mean | -.0046965  -.0058509     .0005948   .0065072
          |  .0028908   .0039932     .0029417   .0041326
          | 
    Empse |  .0914144   .1262755     .0930244   .1306846
          |  .0020451    .002825     .0020811   .0029237
          | 
  Relprec |         0  -47.59274            0  -49.33068
          |         0   2.430245            0   2.314097
          | 
      Mse |  .0083703   .0159638     .0086452   .0171037
          |  .0003797   .0007445     .0003795   .0007105
          | 
     Rmse |  .0914893   .1263479     .0929798   .1307813
          |  .0020748   .0029462      .002041   .0027163
          | 
  Modelse |  .0910296   .1313619     .0910394   .1316664
          |  .0001752   .0003826     .0001693   .0003955
          | 
  Ciwidth |   .356176   .5127883     .3562577   .5138547
          |   .000683   .0014841     .0006601   .0015292
          | 
 Relerror |  -.420924   4.028049    -2.133846    .751246
          |  2.236001   2.346937     2.196998   2.274225
          | 
    Cover |        95       95.6         94.5       96.4
          |  .6892024   .6485677     .7209369   .5891009
          | 
    Power |         5        4.4          5.5        3.6
          |  .6892024   .6485677     .7209369    .589101
--------------------------------------------------------
Note: Coverage and Power calculated at 95% level
Note: where there are multiple entries in the table, they are the estimated performance measure,
  followed by its Monte Carlo standard error

. 
. siman lollyplot
Performance measures not specified: defaulting to bias empse cover
siman lollyplot will draw 2 graphs with 6 panels (3 PMs by 2 DGMs)

. 
. * siman nestloop - only one dgmvar
. 
. 
. * testing setup and reshape via the chars (could be expanded)
. 
. * setup data in LW - this is known to be correct (makes other programs work)
. use $testpath/data/extendedtestdata.dta, clear

. reshape wide b se, i(rep beta pmiss mech estimand) j(method) string
(note: j = CCA MeanImp Noadj)

Data                               long   ->   wide
-----------------------------------------------------------------------------
Number of obs.                   108000   ->   36000
Number of variables                   9   ->      12
j variable (3 values)            method   ->   (dropped)
xij variables:
                                      b   ->   bCCA bMeanImp bNoadj
                                     se   ->   seCCA seMeanImp seNoadj
-----------------------------------------------------------------------------

. siman setup, rep(rep) dgm(beta pmiss mech) method(CCA MeanImp Noadj) target(estimand) est(b) se(se
> ) true(true)
Warning: dgm variable mech has been converted from string to numeric. If you require its levels to
  be ordered differently, encode mech as numeric before running -siman setup-.
Warning: dgm variable beta has non-integer values: converting from float to double (0 real changes
  made)
Warning: dgm variable pmiss has non-integer values: converting from float to double (36,000 real
  changes made)

                   SUMMARY OF DATA
_____________________________________________________

Data-generating mechanism (DGM)
  DGM variables (# levels):       beta (3) pmiss (2) mech (2) 
  Total number of DGMs:           12

Targets
  Variable containing targets:    estimand
  Number of targets:              3
  Target values:                  effect; mean0; mean1

Methods
  Variable containing methods:    method
  Number of methods:              3
  Method values:                  CCA; MeanImp; Noadj

Repetition-level output
  Point estimate variable:        b
  SE variable:                    se
  df variable:                    N/A
  Conf. limit variables:          N/A
  p-value variable:               N/A
  True value variable:            true

Estimates data                    in data
Performance estimates             not in data
_____________________________________________________

. assert "`: char _dta[siman_nummethod]'" == "3"

. assert "`: char _dta[siman_valmethod]'" == "CCA; MeanImp; Noadj"

. 
. * setup data in LL and reshape to LW
. use $testpath/data/extendedtestdata.dta, clear

. siman setup, rep(rep) dgm(beta pmiss mech) method(method) target(estimand) est(b) se(se) true(true
> )
Warning: dgm variable mech has been converted from string to numeric. If you require its levels to
  be ordered differently, encode mech as numeric before running -siman setup-.
Warning: dgm variable beta has non-integer values: converting from float to double (0 real changes
  made)
Warning: dgm variable pmiss has non-integer values: converting from float to double (108,000 real
  changes made)

                   SUMMARY OF DATA
_____________________________________________________

Data-generating mechanism (DGM)
  DGM variables (# levels):       beta (3) pmiss (2) mech (2) 
  Total number of DGMs:           12

Targets
  Variable containing targets:    estimand
  Number of targets:              3
  Target values:                  effect; mean0; mean1

Methods
  Variable containing methods:    method
  Number of methods:              3
  Method values:                  CCA; MeanImp; Noadj

Repetition-level output
  Point estimate variable:        b
  SE variable:                    se
  df variable:                    N/A
  Conf. limit variables:          N/A
  p-value variable:               N/A
  True value variable:            true

Estimates data                    in data
Performance estimates             not in data
_____________________________________________________

. assert "`: char _dta[siman_nummethod]'" == "3"

. assert "`: char _dta[siman_valmethod]'" == "CCA; MeanImp; Noadj"

. 
. 
. * dgm defined by >1 variable
. use $testpath/data/extendedtestdata.dta, clear

. order beta pmiss

. 
. * create a string dgm var as well for testing
. gen betastring = "0"

. replace betastring = "0.25" if float(beta)==float(0.25)
variable betastring was str1 now str4
(36,000 real changes made)

. replace betastring = "0.5" if float(beta)==float(0.5)
(36,000 real changes made)

. drop beta

. 
. siman setup, rep(rep) dgm(betastring pmiss mech) method(method) target(estimand) est(b) se(se) tru
> e(true)
Warning: dgm variable betastring has been converted from string to numeric. If you require its
  levels to be ordered differently, encode betastring as numeric before running -siman setup-.
Warning: dgm variable mech has been converted from string to numeric. If you require its levels to
  be ordered differently, encode mech as numeric before running -siman setup-.
Warning: dgm variable pmiss has non-integer values: converting from float to double (108,000 real
  changes made)

                   SUMMARY OF DATA
_____________________________________________________

Data-generating mechanism (DGM)
  DGM variables (# levels):       betastring (3) pmiss (2) mech (2) 
  Total number of DGMs:           12

Targets
  Variable containing targets:    estimand
  Number of targets:              3
  Target values:                  effect; mean0; mean1

Methods
  Variable containing methods:    method
  Number of methods:              3
  Method values:                  CCA; MeanImp; Noadj

Repetition-level output
  Point estimate variable:        b
  SE variable:                    se
  df variable:                    N/A
  Conf. limit variables:          N/A
  p-value variable:               N/A
  True value variable:            true

Estimates data                    in data
Performance estimates             not in data
_____________________________________________________

. * NB setup has coded beta as 1/2/3
. 
. siman scatter if betastring==1 & float(pmiss)==float(0.2) & mech==1
siman scatter will draw 1 graph with 9 panels

. * 1 panel per dgm, target and method 
. if ${detail} == 1 siman scatter if beta==1 & float(pmiss)==float(0.2) & mech==1 & method == "CCA"
siman scatter will draw 1 graph with 3 panels

. 
. siman swarm if betastring==1 & float(pmiss)==float(0.2) & mech==1
Ignoring non-varying betastring
Ignoring non-varying pmiss
Ignoring non-varying mech
siman swarm will draw 1 graph with 3 panels

. * 1 panel per dgm level(s) and target, method on y-axis
. * for the first panel in the all-graph display (beta level 1, pmiss level 1, mech level 1, estiman
> d == "effect"), the means per
. * method have a very small difference, visible as follows:
. if ${detail} == 1 siman swarm if betastring==1 & float(pmiss)==float(0.2) & mech == 1 & estimand =
> = "effect"
Ignoring non-varying betastring
Ignoring non-varying pmiss
Ignoring non-varying mech
Ignoring non-varying estimand
siman swarm will draw 1 graph with 1 panels

. * FYI:
. * mean method CCA: 0.0025341
. * mean method meanlmp: 0.0021761
. * mean noadj: -0.0034964
. 
. serset clear

. graph drop _all // sometimes helps

. * siman comparemethodsscatter
. * one graph per dgm and target combination, comparing methods - too slow
. siman comparemethodsscatter if betastring==1 & float(pmiss)==float(0.2) & mech == 2 & estimand=="e
> ffect"
siman comparemethodsscatter will draw 1 graph showing 3 methods
Graph cms_1 is for betastring=0, pmiss=.2, mech=MNAR, estimand=effect

. * one graph per target, comparing methods
. 
. siman blandaltman if betastring==1 & float(pmiss)==float(0.4) & mech == 2
siman blandaltman will draw 3 graphs each with 2 panels

. * 1 graph per combination of dgm levels and target, by method difference
. 
. siman zipplot if betastring==1 & float(pmiss)==float(0.4) & mech == 2
siman zipplot will draw 1 graph with 9 panels

. * 1 panel per dgm, target and method combination, 1 graph per beta (as defines y-axis)
. 
. * different spelling
. siman analyze
siman analyse has run successfully

. 
. siman lollyplot if mech==2 & estimand=="effect"
Performance measures not specified: defaulting to bias empse cover
Ignoring non-varying dgm variable mech
siman lollyplot will draw 1 graph with 18 panels (3 PMs by 6 DGMs)

. 
. siman nestloop
Performance measures not specified: defaulting to bias
siman nestloop will draw 3 graphs (3 targets * 1 performance measures)

. 
. 
. * examples in paper
. use "https://raw.githubusercontent.com/UCL/siman/dev/testing/data/simcheck.dta", clear
(Simulation results from simcheck99.do in paper doi:10.1093/ije/dyad134)

. siman setup, rep(rep) dgm(dgm) method(method) est(b) se(se) true(0)
Warning: dgm variable dgm has been converted from string to numeric. If you require its levels to be
  ordered differently, encode dgm as numeric before running -siman setup-.
Warning: siman setup found unwanted variables: N df

                   SUMMARY OF DATA
_____________________________________________________

Data-generating mechanism (DGM)
  DGM variables (# levels):       dgm (3) 
  Total number of DGMs:           3

Targets
  Variable containing targets:    N/A
  Number of targets:              1
  Target values:                  

Methods
  Variable containing methods:    method
  Number of methods:              3
  Method values:                  Full; CCA; MI

Repetition-level output
  Point estimate variable:        b
  SE variable:                    se
  df variable:                    N/A
  Conf. limit variables:          N/A
  p-value variable:               N/A
  True value variable:            _true (created)

Estimates data                    in data
Performance estimates             not in data
_____________________________________________________

. set scheme mrc

. 
. siman scatter 
siman scatter will draw 1 graph with 9 panels

. 
. siman swarm
siman swarm will draw 1 graph with 3 panels

. 
. graph drop _all

. siman comparemethodsscatter if dgm==1
siman comparemethodsscatter will draw 1 graph showing 3 methods
Graph cms_1 is for dgm=MCAR

. 
. siman blandaltman 
siman blandaltman will draw 3 graphs each with 2 panels

. 
. siman zipplot
siman zipplot will draw 1 graph with 9 panels

. 
. * siman nestloop - no because only one dgmvar
. 
. 
. use $testpath/data/res.dta, clear

. drop expfem exprem expmh msefem mserem msemh msepeto mseg2 mselimf covfem covrem covmh covpeto cov
> g2 covlimf msepeters covpeters expexpect mseexpect covexpect msetrimfill covtrimfill biasfem biasr
> em biasmh biaspeto biaspeters biassfem biassrem biasg2 biaslimf biaslimr biasexpect biastrimfill v
> ar2fem var2rem var2mh var2expect

. 
. siman setup, rep(v1) dgm(theta rho pc tau2 k) method(peto g2 limf peters trimfill) estimate(exp) s
> e(var2) true(theta)
Warning: dgm variable theta has non-integer values: converting from float to double (192 real
  changes made)
Warning: dgm variable tau2 has non-integer values: converting from float to double (576 real changes
  made)

                   SUMMARY OF DATA
_____________________________________________________

Data-generating mechanism (DGM)
  DGM variables (# levels):       theta (4) rho (4) pc (4) tau2 (4) k (3) 
  Total number of DGMs:           768

Targets
  Variable containing targets:    N/A
  Number of targets:              1
  Target values:                  

Methods
  Variable containing methods:    method
  Number of methods:              5
  Method values:                  peto; g2; limf; peters; trimfill

Repetition-level output
  Point estimate variable:        exp
  SE variable:                    var2
  df variable:                    N/A
  Conf. limit variables:          N/A
  p-value variable:               N/A
  True value variable:            theta

Estimates data                    in data
Performance estimates             not in data
_____________________________________________________

. 
. * siman analyse needs force option to cope with only 1 repetition per dgm [NB gets many lines of r
> ed output, suppressed by cap]
. cap siman analyse, force

. assert _rc == 0

. 
. * Recreating Gerta's graph, Figure 2
. siman nestloop mean, dgmorder(-theta rho -pc tau2 -k) ylabel(0.2 0.5 1) ytitle("Odds ratio") xlabe
> l(none) xtitle("")
siman nestloop will draw 1 graphs (1 targets * 1 performance measures)

. 
. di as result "*** SIMAN GRAPHS HAVE PASSED ALL THE TESTS IN `filename'.do ***"
*** SIMAN GRAPHS HAVE PASSED ALL THE TESTS IN test_graphs_mixed.do ***

. 
. log close
