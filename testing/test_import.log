
. 
. // TEST WORKING ON THE NESTLOOP TEST DATA SET
. 
. use $testpath/data/res.dta, clear

. keep if pc==2 & rho==3
(720 observations deleted)

. drop pc rho

. local dgmvars theta tau2 k 

. local methodvals fem rem mh peto g2 limf limr peters expect trimfill sfem srem // not needed

. local pmtarg exp mse cov bias var2 // combines target and PM, I think

. 
. * reshape long-long
. reshape long `pmtarg', i(`dgmvars') j(method) string
(j = expect fem g2 limf limr mh peters peto rem sfem srem trimfill)
(variable explimr not found)
(variable mselimr not found)
(variable covlimr not found)
(variable var2limr not found)
(variable expsfem not found)
(variable msesfem not found)
(variable covsfem not found)
(variable var2sfem not found)
(variable expsrem not found)
(variable msesrem not found)
(variable covsrem not found)
(variable var2srem not found)

Data                               Wide   ->   Long
-----------------------------------------------------------------------------
Number of observations               48   ->   576         
Number of variables                  52   ->   10          
j variable (12 values)                    ->   method
xij variables:
       expexpect expfem ... exptrimfill   ->   exp
       mseexpect msefem ... msetrimfill   ->   mse
       covexpect covfem ... covtrimfill   ->   cov
    biasexpect biasfem ... biastrimfill   ->   bias
    var2expect var2fem ... var2trimfill   ->   var2
-----------------------------------------------------------------------------

. rename (`pmtarg') (est=)

. reshape long est, i(`dgmvars' method) j(perfmeas) string
(j = bias cov exp mse var2)

Data                               Wide   ->   Long
-----------------------------------------------------------------------------
Number of observations              576   ->   2,880       
Number of variables                  10   ->   7           
j variable (5 values)                     ->   perfmeas
xij variables:
             estbias estcov ... estvar2   ->   est
-----------------------------------------------------------------------------

. 
. * extract target and PM
. gen target = cond(perfmeas=="var2",2,1)

. replace perfmeas = "cover" if perfmeas=="cov"
variable perfmeas was str4 now str5
(576 real changes made)

. replace perfmeas = "mean" if inlist(perfmeas, "exp", "var2")
(1,152 real changes made)

. 
. * save for later
. save zres, replace
(file zres.dta not found)
file zres.dta saved

. 
. // test with all going well
. use zres, clear

. siman import, dgm(theta tau2 k) target(target) method(method) estimate(est) perf(perfmeas)
Assuming coverage/power were calculated at 95% level

                   SUMMARY OF DATA
_____________________________________________________

Data-generating mechanism (DGM)
  DGM variables (# levels):       theta (4) tau2 (4) k (3) 
  Total number of DGMs:           48

Targets
  Variable containing targets:    target
  Number of targets:              2
  Target values:                  1 2

Methods
  Variable containing methods:    method
  Number of methods:              12
  Method values:                  expect fem g2 limf limr mh peters peto rem sfem srem trimfill

Repetition-level output
  Point estimate variable:        est
  SE variable:                    -
  df variable:                    -
  Conf. limit variables:          -
  p-value variable:               -
  True value variable:            -

Estimates data                    not in data
Performance statistics            in data
_____________________________________________________

. siman table if theta==1 & tau2==0 & k==5, column(_perfmeas target) tabdisp

----------------------------------------------------------------------------------------------------
         |                              Performance measure and target                              
         | ------- Bias -------   ------- Mean -------   -------- MSE -------   ------- Cover ------
  method |         1          2           1          2           1          2           1          2
---------+------------------------------------------------------------------------------------------
  expect |   .029331               1.029765    .077569    .0784293                   .999           
     fem | -.2753639               .7592958   .0141768    .0900021                   .267           
      g2 |  .0346562               1.035264   .0776411    .0788422                   .999           
    limf |  .0309012               1.031384   .0771716    .0781264                   .752           
    limr |  .0308544                                                                                
      mh |  -.280288               .7555661   .0145753    .0931366                   .245           
  peters | -.0966765               .9078496   .0327262    .0420725                      1           
    peto | -.2780032               .7572944    .013945    .0912308                   .244           
     rem |  -.296165               .7436647   .0140836    .1017973                   .304           
    sfem |  .0985691                                                                                
    srem |  .1997911                                                                                
trimfill | -.2254566               .7981517   .0152887    .0661193                      1           
----------------------------------------------------------------------------------------------------
Note: Coverage calculated at 95% level
Note: where there are multiple entries per performance measure, these are estimated performance,
  followed by Monte Carlo standard error

. siman nes mean if target==1 & inlist(method,"peto" ,"g2")
siman nestloop will draw 1 graphs (1 targets * 1 performance measures)

. 
. // test with different varnames
. use zres, clear

. rename (theta tau2 k target method est perfmeas) (my=)

. siman import, dgm(mytheta mytau2 myk) target(mytarget) method(mymethod) estimate(myest) perf(myper
> fmeas)
Assuming coverage/power were calculated at 95% level

                   SUMMARY OF DATA
_____________________________________________________

Data-generating mechanism (DGM)
  DGM variables (# levels):       mytheta (4) mytau2 (4) myk (3) 
  Total number of DGMs:           48

Targets
  Variable containing targets:    mytarget
  Number of targets:              2
  Target values:                  1 2

Methods
  Variable containing methods:    mymethod
  Number of methods:              12
  Method values:                  expect fem g2 limf limr mh peters peto rem sfem srem trimfill

Repetition-level output
  Point estimate variable:        myest
  SE variable:                    -
  df variable:                    -
  Conf. limit variables:          -
  p-value variable:               -
  True value variable:            -

Estimates data                    not in data
Performance statistics            in data
_____________________________________________________

. 
. // test with wrong PM name
. use zres, clear

. replace perfmeas="meav" if perfmeas=="mean"
(1,152 real changes made)

. tab perfmeas

   perfmeas |      Freq.     Percent        Cum.
------------+-----------------------------------
       bias |        576       20.00       20.00
      cover |        576       20.00       40.00
       meav |      1,152       40.00       80.00
        mse |        576       20.00      100.00
------------+-----------------------------------
      Total |      2,880      100.00

. cap noi siman import, dgm(theta tau2 k) target(target) method(method) estimate(est) perf(perfmeas)
Performance measures not allowed: meav

. cap assert _rc==498

. 
. erase zres.dta

. 
. 
. // COMPARE BEFORE AND AFTER EXPORT/IMPORT
. // load data and do benchmark analysis
. use data/simcheck, clear
(Simulation results from simcheck99.do in paper doi:10.1093/ije/dyad134)

. siman setup, rep(rep) dgm(dgm) method(method) est(b) se(se) df(df) true(0)
Warning: dgm variable dgm has been converted from string to numeric. If you require its levels to be
  ordered differently, encode dgm as numeric before running -siman setup-.
Warning: siman setup found unwanted variables: N

                   SUMMARY OF DATA
_____________________________________________________

Data-generating mechanism (DGM)
  DGM variables (# levels):       dgm (3) 
  Total number of DGMs:           3

Targets
  Variable containing targets:    -
  Number of targets:              1
  Target values:                  

Methods
  Variable containing methods:    method
  Number of methods:              3
  Method values:                  Full; CCA; MI

Repetition-level output
  Point estimate variable:        b
  SE variable:                    se
  df variable:                    df
  Conf. limit variables:          -
  p-value variable:               -
  True value variable:            _true (created)

Estimates data                    in data
Performance statistics            not in data
_____________________________________________________

. siman ana, perf
Warning: missing values in df()
siman analyse has run successfully

. siman table, col(dgm method) tabdisp

----------------------------------------------------------------------------------------------------
Performa |                             Missing data mechanism and method                            
nce      | ------------ MCAR ----------- ------------ MAR ------------ ------------ MNAR -----------
measure  |      Full       CCA        MI      Full       CCA        MI      Full       CCA        MI
---------+------------------------------------------------------------------------------------------
 Estreps |      1000      1000      1000      1000      1000      1000      1000      1000      1000
         |                                                                                          
         | 
  SEreps |      1000      1000      1000      1000      1000      1000      1000      1000      1000
         |                                                                                          
         | 
    Bias | -.0000126 -.0075347  .0000898 -.0168955  -.160113 -.0203649 -.0063853 -.0301532  .0486318
         |  .0134727  .0163235  .0143525  .0137363  .0183634  .0146205  .0136254  .0170389  .0145317
         | 
 Pctbias |                                                                                          
         |                                                                                          
         | 
    Mean | -.0000126 -.0075347  .0000898 -.0168955  -.160113 -.0203649 -.0063853 -.0301532  .0486318
         |  .0134727  .0163235  .0143525  .0137363  .0183634  .0146205  .0136254  .0170389  .0145317
         | 
   Empse |  .4260444  .5161938  .4538652   .434379  .5807029  .4623407  .4308737  .5388181  .4595314
         |  .0095314  .0115482  .0101538  .0097179  .0129914  .0103434  .0096394  .0120544  .0102806
         | 
 Relprec |         0 -31.87852 -11.88377         0  -44.0462 -11.72998         0 -36.05369 -12.08366
         |         0  2.408183  1.713048         0  2.292493  2.051793         0   2.33216  1.881443
         | 
     MSE |  .1813323  .2662463  .2057876  .1887818  .3625148  .2139599  .1855072  .2909439   .213323
         |  .0090287  .0132095  .0097192  .0094203  .0179585  .0107484  .0089703  .0147555  .0102468
         | 
    RMSE |  .4258313  .5159907  .4536382  .4344903   .602092  .4625581  .4307055  .5393922   .461869
         |  .0106013  .0128002  .0107126  .0108407  .0149134  .0116185  .0104135  .0136779  .0110928
         | 
 Modelse |  .4096058  .4964768  .4334714  .4105874  .5483734  .4479698  .4073388  .5226676  .4341262
         |  .0011464  .0018082  .0014681  .0011822  .0025673  .0016925  .0011531  .0023293  .0015074
         | 
 CIwidth |  1.599708  1.934587  1.697258  1.603209  2.129348  1.761129  1.590864  2.032631  1.703247
         |  .0043573  .0067032  .0056927  .0044883  .0093101  .0068824  .0043296  .0081325  .0058471
         | 
Relerror | -3.858411 -3.819691 -4.493358 -5.477135 -5.567305 -3.108309 -5.462126   -2.9974 -5.528502
         |  2.167634   2.18006  2.161009  2.132093  2.158397  2.198344  2.131855  2.212767  2.138808
         | 
   Cover |      94.9      94.7      94.7      93.5      94.9      94.4      94.3      95.5      93.4
         |  .6956938  .7084563  .7084563  .7795832  .6956938  .7270762  .7331505  .6555532  .7851368
         | 
   Power |       5.1       5.3       5.3       6.5       5.1       5.6       5.7       4.5       6.6
         |  .6956939  .7084561  .7084561  .7795832  .6956939  .7270764  .7331507  .6555532  .7851369
----------------------------------------------------------------------------------------------------
Note: Coverage and Power calculated at 95% level
Note: where there are multiple entries per performance measure, these are estimated performance,
  followed by Monte Carlo standard error

. siman lol, name(lolly1,replace)
Performance measures not specified: defaulting to bias empse cover
siman lollyplot will draw 1 graph with 9 panels (3 PMs by 3 DGMs)

. 
. // "export" "to non-siman-format
. * could use siman_unset
. local allthings : char _dta[siman_allthings]

. foreach thing in `allthings' {
  2.     char _dta[siman_`thing']
  3. }

. keep if rep<0
(0 observations deleted)

. drop rep _dataset N df

. rename _true true

. rename _perfmeascode pm

. 
. // import to siman
. program drop _all

. siman import, perf(pm) dgm(dgm) method(method) estimate(b) se(se) true(true)
Assuming coverage/power were calculated at 95% level

                   SUMMARY OF DATA
_____________________________________________________

Data-generating mechanism (DGM)
  DGM variables (# levels):       dgm (3) 
  Total number of DGMs:           3

Targets
  Variable containing targets:    -
  Number of targets:              
  Target values:                  

Methods
  Variable containing methods:    method
  Number of methods:              3
  Method values:                  Full CCA MI

Repetition-level output
  Point estimate variable:        b
  SE variable:                    se
  df variable:                    -
  Conf. limit variables:          -
  p-value variable:               -
  True value variable:            true

Estimates data                    not in data
Performance statistics            in data
_____________________________________________________

. siman table, col(dgm method) tabdisp

----------------------------------------------------------------------------------------------------
Performa |                             Missing data mechanism and method                            
nce      | ------------ MCAR ----------- ------------ MAR ------------ ------------ MNAR -----------
measure  |      Full       CCA        MI      Full       CCA        MI      Full       CCA        MI
---------+------------------------------------------------------------------------------------------
 Estreps |      1000      1000      1000      1000      1000      1000      1000      1000      1000
         |                                                                                          
         | 
  SEreps |      1000      1000      1000      1000      1000      1000      1000      1000      1000
         |                                                                                          
         | 
    Bias | -.0000126 -.0075347  .0000898 -.0168955  -.160113 -.0203649 -.0063853 -.0301532  .0486318
         |  .0134727  .0163235  .0143525  .0137363  .0183634  .0146205  .0136254  .0170389  .0145317
         | 
 Pctbias |                                                                                          
         |                                                                                          
         | 
    Mean | -.0000126 -.0075347  .0000898 -.0168955  -.160113 -.0203649 -.0063853 -.0301532  .0486318
         |  .0134727  .0163235  .0143525  .0137363  .0183634  .0146205  .0136254  .0170389  .0145317
         | 
   Empse |  .4260444  .5161938  .4538652   .434379  .5807029  .4623407  .4308737  .5388181  .4595314
         |  .0095314  .0115482  .0101538  .0097179  .0129914  .0103434  .0096394  .0120544  .0102806
         | 
 Relprec |         0 -31.87852 -11.88377         0  -44.0462 -11.72998         0 -36.05369 -12.08366
         |         0  2.408183  1.713048         0  2.292493  2.051793         0   2.33216  1.881443
         | 
     MSE |  .1813323  .2662463  .2057876  .1887818  .3625148  .2139599  .1855072  .2909439   .213323
         |  .0090287  .0132095  .0097192  .0094203  .0179585  .0107484  .0089703  .0147555  .0102468
         | 
    RMSE |  .4258313  .5159907  .4536382  .4344903   .602092  .4625581  .4307055  .5393922   .461869
         |  .0106013  .0128002  .0107126  .0108407  .0149134  .0116185  .0104135  .0136779  .0110928
         | 
 Modelse |  .4096058  .4964768  .4334714  .4105874  .5483734  .4479698  .4073388  .5226676  .4341262
         |  .0011464  .0018082  .0014681  .0011822  .0025673  .0016925  .0011531  .0023293  .0015074
         | 
 CIwidth |  1.599708  1.934587  1.697258  1.603209  2.129348  1.761129  1.590864  2.032631  1.703247
         |  .0043573  .0067032  .0056927  .0044883  .0093101  .0068824  .0043296  .0081325  .0058471
         | 
Relerror | -3.858411 -3.819691 -4.493358 -5.477135 -5.567305 -3.108309 -5.462126   -2.9974 -5.528502
         |  2.167634   2.18006  2.161009  2.132093  2.158397  2.198344  2.131855  2.212767  2.138808
         | 
   Cover |      94.9      94.7      94.7      93.5      94.9      94.4      94.3      95.5      93.4
         |  .6956938  .7084563  .7084563  .7795832  .6956938  .7270762  .7331505  .6555532  .7851368
         | 
   Power |       5.1       5.3       5.3       6.5       5.1       5.6       5.7       4.5       6.6
         |  .6956939  .7084561  .7084561  .7795832  .6956939  .7270764  .7331507  .6555532  .7851369
----------------------------------------------------------------------------------------------------
Note: Coverage and Power calculated at 95% level
Note: where there are multiple entries per performance measure, these are estimated performance,
  followed by Monte Carlo standard error

. siman lol, name(lolly2,replace)
Performance measures not specified: defaulting to bias empse cover
siman lollyplot will draw 1 graph with 9 panels (3 PMs by 3 DGMs)

. 
. * compare lolly1 and lolly2
. * compare results for both runs
. 
. 
. di as result "*** SIMAN HAS PASSED ALL THE TESTS IN `filename'.do ***"
*** SIMAN HAS PASSED ALL THE TESTS IN test_import.do ***

. 
. log close
